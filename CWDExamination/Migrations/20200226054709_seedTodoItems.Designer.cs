// <auto-generated />
using CWDExamination.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CWDExamination.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200226054709_seedTodoItems")]
    partial class seedTodoItems
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CWDExamination.Models.Note", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TextNote");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Notes");

                    b.HasData(
                        new { Id = 1, TextNote = "Create API Method", Title = "POST" },
                        new { Id = 2, TextNote = "Retrieve API Method", Title = "GET" }
                    );
                });

            modelBuilder.Entity("CWDExamination.Models.TodoItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsComplete");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("TodoItems");

                    b.HasData(
                        new { Id = 1, IsComplete = false, Name = "Crud Operation" },
                        new { Id = 2, IsComplete = true, Name = "Restful API" }
                    );
                });
#pragma warning restore 612, 618
        }
    }
}
